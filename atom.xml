<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jdmyy</title>
  
  <subtitle>Leaf</subtitle>
  <link href="https://yelang991115.github.io/atom.xml" rel="self"/>
  
  <link href="https://yelang991115.github.io/"/>
  <updated>2021-12-14T01:26:04.369Z</updated>
  <id>https://yelang991115.github.io/</id>
  
  <author>
    <name>阳鱼</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DevOps初步认识</title>
    <link href="https://yelang991115.github.io/2021/12/14/DevOps%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/"/>
    <id>https://yelang991115.github.io/2021/12/14/DevOps%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/</id>
    <published>2021-12-14T01:02:35.000Z</published>
    <updated>2021-12-14T01:26:04.369Z</updated>
    
    <content type="html"><![CDATA[<p>​    DeVOps：development和operation的组合词汇，目的是让开发者和运维者统一结合起来。最终目的是为了软件更加可靠和便捷。</p><p><strong>概念提出：</strong>传统的开发模式为<strong>单体架构+瀑布模式</strong>开发，也就是单纯的系统=》数据库的对应关系，也像我们当初自己大学时候自娱自乐的开发demo的玩法，由于项目小可以一个人承担多个角色，出现相关问题只需要在线上查看相关的日志即可解决。开发模式也就采用瀑布流开发模式。</p><p>​    当业务发展逐渐变得繁杂，功能模块变得越来越多，这就导致传统的单体架构+瀑布开发无法满足项目开发需求或满足需求会导致运维十分困难，并且当nginx，cdn等相关基础技术的加入让传统开发模式变得更加不适用起来。并且当多个项目同步进行 的时候不可避免的会出现不同的任务目标和不同的编程语言。这样一个大的项目会被分解为多个小的项目目标，并为了保证项目进行的顺利，在每个阶段都会有对应的测试人员对相关项目进行简单的验收。这个时候采用的方法主要是<strong>分布式架构+敏捷开发</strong>，所采用的也是Dev+Ops。这个时候的运维主要负责运维而不参与其他环节。    而这样导致的问题就是开发和运维被对立起来，运维的主要目的就是稳定，而开发人员为了功能发展就会产生很多 变动。</p><p>​    为了改变这种困境，<strong>微服务+DevOps</strong>应运而生。在大项目多语言复杂开发的环境下，将项目<strong>解耦</strong>多次部署，才能确保在部分服务出现问题后不会对其他项目造成影响。而现在运维所做的工作就是将不同的服务部署在不同的服务器，并将相关业务外包到云服务厂商，所涉及的问题逐步沉淀到平台上处理，这样就解决了运维与开发的对立：直接让开发承担运维工作。这也就是初步的DevOps的定义。而现如今DevOps已经变成一种更为广泛的概念。DevOps：人 People+流程 Process+平台 Platform。</p><p><strong>人 + 流程 = 文化</strong></p><p><strong>流程 + 平台 = 工具</strong></p><p><strong>平台 + 人 = 赋能</strong></p><p>一个完成度高的DevOps平台包含：</p><p><code>项目管理（PM）</code>：jira。运营可以上去提问题，可以看到各个问题的完整的工作流，待解决未解决等；</p><p><code>代码管理</code>：gitlab。jenkins或者K8S都可以集成gitlab，进行代码管理，上线，回滚等；</p><p><code>持续集成CI（Continuous Integration）</code>：<a href="https://www.zhihu.com/search?q=gitlab+ci&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1755254160%7D">gitlab ci</a>。开发人员提交了新代码之后，立刻进行构建、（单元）测试。根据测试结果，我们可以确定新代码和原有代码能否正确地集成在一起。</p><p><code>持续交付CD（Continuous Delivery）</code>：<a href="https://www.zhihu.com/search?q=gitlab+cd&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1755254160%7D">gitlab cd</a>。完成单元测试后，可以把代码部署到连接数据库的 Staging 环境中更多的测试。如果代码没有问题，可以继续手动部署到生产环境中。</p><p><code>镜像仓库</code>：VMware Harbor，私服nexus。</p><p><code>容器</code>：Docker。</p><p><code>编排</code>：K8S。</p><p><code>服务治理</code>：Consul。</p><p><code>脚本语言</code>：Python。</p><p><code>日志管理</code>：Cat+Sentry，还有种常用的是ELK。</p><p><code>系统监控</code>：Prometheus。</p><p><code>负载均衡</code>：Nginx。</p><p><code>网关</code>：Kong，zuul。</p><p><code>链路追踪</code>：Zipkin。</p><p><code>产品和UI图</code>：<a href="https://www.zhihu.com/search?q=%E8%93%9D%E6%B9%96&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1755254160%7D">蓝湖</a>。</p><p><code>公司内部文档</code>：Confluence。</p><p><code>报警</code>：推送到工作群。</p><p>这样整体的开发流程已经可以高度协同。</p><p>——————知乎 小龙飞</p><p>​    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    DeVOps：development和operation的组合词汇，目的是让开发者和运维者统一结合起来。最终目的是为了软件更加可靠和便捷。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;概念提出：&lt;/strong&gt;传统的开发模式为&lt;strong&gt;单体架构+瀑布模式&lt;/strong</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yelang991115.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>第一日工作（正式</title>
    <link href="https://yelang991115.github.io/2021/12/13/%E7%AC%AC%E4%B8%80%E6%97%A5%E5%B7%A5%E4%BD%9C%EF%BC%88%E6%AD%A3%E5%BC%8F/"/>
    <id>https://yelang991115.github.io/2021/12/13/%E7%AC%AC%E4%B8%80%E6%97%A5%E5%B7%A5%E4%BD%9C%EF%BC%88%E6%AD%A3%E5%BC%8F/</id>
    <published>2021-12-13T09:05:13.000Z</published>
    <updated>2021-12-13T09:09:42.251Z</updated>
    
    <content type="html"><![CDATA[<p>本以为会把我分在离家近的局，结果发现领导很忙（虽然我不知道在忙啥）。。</p><p>今日最大收获就是知道了大家都在混（或者只有我在混。。</p><p>那个局的领导人好像不想要支撑人员。。搞得我很尴尬，也没有别人带着我做相关工作。</p><p>考虑买个IPAD用来刷题，大家都在准备GWY，努力慢慢弄把，第一天没啥好说的。基金也是红的。</p><p>–下班！</p><p>17点09分</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本以为会把我分在离家近的局，结果发现领导很忙（虽然我不知道在忙啥）。。&lt;/p&gt;
&lt;p&gt;今日最大收获就是知道了大家都在混（或者只有我在混。。&lt;/p&gt;
&lt;p&gt;那个局的领导人好像不想要支撑人员。。搞得我很尴尬，也没有别人带着我做相关工作。&lt;/p&gt;
&lt;p&gt;考虑买个IPAD用来刷题，</summary>
      
    
    
    
    
    <category term="日常" scheme="https://yelang991115.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>企业上云</title>
    <link href="https://yelang991115.github.io/2021/12/10/%E4%BC%81%E4%B8%9A%E4%B8%8A%E4%BA%91/"/>
    <id>https://yelang991115.github.io/2021/12/10/%E4%BC%81%E4%B8%9A%E4%B8%8A%E4%BA%91/</id>
    <published>2021-12-10T00:49:18.000Z</published>
    <updated>2021-12-10T01:31:39.435Z</updated>
    
    <content type="html"><![CDATA[<h3 id="企业上云"><a href="#企业上云" class="headerlink" title="企业上云:"></a>企业上云:</h3><p>​    企业上云是指企业通过互联网技术与云计算技术方式，连接社会性资源、共享平台及工作内容等，从而开展信息化管理基础设施建设、管理方法、业务流程等运用的全过程。简言之即将企业各个部分的内容都连接上网，方便其统一利用管理和调配的一种方式。换言之企业上云从技术层面可以优化企业管理和生产流程从而满<strong>足降本增效</strong>的需求，也可以满足安全容灾的需求。并且将相关的ERP系统放在云上之后可以满足更稳定的网络链接。除此之外，还有各地为了企业上云而提供的<strong>奖励</strong>。</p><p>​    基本规范流程如下：</p><img src="/2021/12/10/%E4%BC%81%E4%B8%9A%E4%B8%8A%E4%BA%91/%E6%B5%81%E7%A8%8B%E5%9B%BE.PNG" class><p>​    在上云方面分为无ERP上云和已有ERP上云。无ERP上云可以通过相关厂商进行合作搭建自由ERP。已有ERP在本地IDC中的可以通过云专线或者VPN完成数据库转移到RDS。与此同时在上云之后还可以为企业满足云备份和OBS的需求。</p><p>​    目前上云类型分为三星到五星上云，根据公司所购买的不同云服务形式给予不同的上云评级。从企业申请到材料审核到最后的评定审核。省经信委会定期将通过企业上云的企业进行公示。其中所需主要信息上云表如下：</p><img src="/2021/12/10/%E4%BC%81%E4%B8%9A%E4%B8%8A%E4%BA%91/%E4%B8%8A%E4%BA%91%E8%A1%A8.PNG" class><p>​    央企行业由于对系统稳定、数据安全有着较高要求，因此企业上云的整体架构以专属云+私有云+云管平台为主。 专属云：针对企业非核心应用、非关键应用，使用专属云来承载。 私有云：针对企业核心应用、保存核心数据建议使用私有云来承载。 在专属云和私有云的基础之上我们实现了统一的云管平台，帮助企业统一管理所有云资源。</p><p>​    企业上云不仅可以满足目前大势所趋的数字化转型经济的需求，也可以解决目前存在的能耗问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;企业上云&quot;&gt;&lt;a href=&quot;#企业上云&quot; class=&quot;headerlink&quot; title=&quot;企业上云:&quot;&gt;&lt;/a&gt;企业上云:&lt;/h3&gt;&lt;p&gt;​    企业上云是指企业通过互联网技术与云计算技术方式，连接社会性资源、共享平台及工作内容等，从而开展信息化管理基础设</summary>
      
    
    
    
    <category term="工业互联网" scheme="https://yelang991115.github.io/categories/%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
    <category term="工作" scheme="https://yelang991115.github.io/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>南京随感</title>
    <link href="https://yelang991115.github.io/2021/12/09/%E2%80%9C%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4%EF%BC%81%E2%80%9D/"/>
    <id>https://yelang991115.github.io/2021/12/09/%E2%80%9C%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4%EF%BC%81%E2%80%9D/</id>
    <published>2021-12-09T05:59:29.989Z</published>
    <updated>2021-12-09T06:00:19.250Z</updated>
    
    <content type="html"><![CDATA[<p>“欢迎光临！”</p><p>现在的菜馆都喜欢搞这套的，带着点上扬的光，抑扬顿挫。</p><p>“你可不能嘲笑她们！”那倒是，你毕竟也是在服务业，每天在柜台旁对着老头老太太，对着暴发户在那里欢迎光临。我不会点菜，让我自己选我是一定不会来这个餐馆的，但是她选择了这个餐馆我也不会拒绝就是了。花菜，鸡翅，芝士南瓜。我就点这个，你看看你要吃点啥？她把口罩拿下来，和高中时候一点没变。</p><p>我接过菜单，翻来覆去也没啥适合我的口味，牛仔骨？我反问她。“我不吃牛、羊、鱼。”我沉默了一下，但是点都点了，我也没让服务员划去。如果是高三的时候都不用提起话题，而是自然而然的聊起来。”你来南京是培训吗，来几天？“我把这次来的任务和她说而一下，她只是哦了一下。我和她也快一年没见了，上次见面还是她来我们学校考研。她拿出手机解锁屏幕然后锁上屏幕，又掏出一根唇膏抹了一下。坦白的讲，我是讨厌大城市的，因为我这种乡下来的泥腿子对大城市有畏惧感，这种畏惧感转换成一种讨厌，但是不得不承认南京确实很繁华，我从住的地方到新街口见识了真正的钢铁洪流，堵得我有点窒息。</p><p>你在南京过的咋样？我向来直接开门见山的。还行吧，一个月到手7.5K，和两个人合租一个月1.5K。又是一阵沉默。服务员把山药端了上来，我没动筷子，因为到这边的时候在酒店吃了点自主。“这山药还不错，挺好吃的！”听着她这样说我才开始尝菜。之后就是沉默的吃饭和若有若无的聊天。</p><p>“我早都想请你吃饭了，大一的时候，但是那个时候你不来。“我没对她说那个时候我很喜欢她。她打了个哈哈过去了，但是我知道当时她在谈恋爱，就在我们学校校庆那天。付完款下楼的路上，可能是彼此陌生感消失了一点，聊的没有那么僵硬了。”喝咖啡吧，我请你。“</p><p>等待咖啡的时候她问我为什么会回老家发展，我告诉她有一根无形的链子把我拴住了。她没有表情，只是哦了一下。我也沉默，不知道该说什么。“正好这个情景，万一你明天相亲的时候尴尬住怎么办？”我问她。我知道我是在强行聊天，她也知道，但是她没说啥顺着我的话题聊了一下，兜兜转转又回去聊我们当初高三的生活，也是我记忆中最开心的生活。</p><p>我们都没有聊啥有意义的，或者说聊的很干燥，就像是大旱的天气只起了一点露珠。回去的路上，我准备叫车，她让我坐地铁，我这乡下来的哪里知道怎么坐地铁。但是我还是和她一起去地铁站了，因为就像我吃完饭走在路上和她说的那样，趁着我还有点心力，把想见的人都见一见，以后或许我路过南京找你你都不出来了。到地铁站我才知道她和我坐的地铁刚好相反，一个一号线向左一个向右。她的车先到了，我目送她上地铁，她没回头。我目光跟随她坐的地铁车厢，没有看到她。</p><p>快到酒店门口，不是很想进去，在门外吹了会风，看到她的微信：“到了吗？”。我沉默了一会，到了。我还是不喜欢大城市，不舒服。</p><p>“也许住一段时间就习惯了”我也觉得这样，但是我没有办法选择在南京工作。或许以后有更强的锁链把我拴住，我或许会习惯吧，这是我的回答。之后再想聊一聊那边的回应就只有嗯嗯嗯了。我也没啥好说的，就让她早点休息为明天的相亲做准备了。</p><p>就像她在吃饭的时候问我有没有相亲，我看着她说没有。她没有回应。她家里在催她相亲，但是我没有，我很穷。</p><p>或许一年后我路过南京会和她聊一下我到南京了，两年后也会这样，但是三年后呢？</p><p>就像在地铁一号线那样，一个向北一个向南，渐渐背离。</p><p>总是要亲手把记忆撕碎才能格外珍惜没有破碎的记忆。</p><p><strong>记于新世纪酒店  2021.12.7   17点39分</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“欢迎光临！”&lt;/p&gt;
&lt;p&gt;现在的菜馆都喜欢搞这套的，带着点上扬的光，抑扬顿挫。&lt;/p&gt;
&lt;p&gt;“你可不能嘲笑她们！”那倒是，你毕竟也是在服务业，每天在柜台旁对着老头老太太，对着暴发户在那里欢迎光临。我不会点菜，让我自己选我是一定不会来这个餐馆的，但是她选择了这个餐馆我也</summary>
      
    
    
    
    <category term="随感" scheme="https://yelang991115.github.io/categories/%E9%9A%8F%E6%84%9F/"/>
    
    
    <category term="情感" scheme="https://yelang991115.github.io/tags/%E6%83%85%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yelang991115.github.io/2021/12/09/hello-world/"/>
    <id>https://yelang991115.github.io/2021/12/09/hello-world/</id>
    <published>2021-12-09T03:36:58.630Z</published>
    <updated>2021-12-09T03:36:58.630Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
